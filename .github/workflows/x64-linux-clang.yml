name: x64-linux-clang

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  build-and-test:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    strategy:
      matrix:
        PRESET: [clang-linux-debug, clang-linux-release]
        WORK_ITEM: [CORO, FUNCORO]
    steps:
    - uses: actions/checkout@v4
    - name: submodule-clone
      run: >
        cd submodules
        && git clone https://github.com/tzcnt/TooManyCooks.git
        && git clone https://github.com/tzcnt/tmc-asio.git
    # If a branch with the same name exists in the dependency repos, use that. Otherwise, use main.
    - name: submodule-branch-TMC
      continue-on-error: true
      run: cd submodules/TooManyCooks && git fetch && git checkout ${{env.BRANCH_NAME}}
    - name: submodule-branch-tmc-asio
      continue-on-error: true
      run: cd submodules/tmc-asio && git fetch && git checkout ${{env.BRANCH_NAME}}
    - name: configure
      run: cmake -G "Unix Makefiles" -DTMC_AS_SUBMODULE=ON -DCMD_COMPILE_FLAGS='-DTMC_WORK_ITEM=${{matrix.WORK_ITEM}}' --preset ${{matrix.PRESET}} .
    - name: build
      run: cmake --build ./build/${{matrix.PRESET}} --parallel $(nproc) --target all
    # Core filenames will be of the form executable.pid.timestamp
    - name: Set cores to get stored in /cores
      run: |
        sudo mkdir /cores
        sudo chmod 777 /cores
        sudo bash -c 'echo "/cores/%e.%p.%t" > /proc/sys/kernel/core_pattern'
        ulimit -c unlimited
    - name: run tests
      run: ./build/${{matrix.PRESET}}/tests/tests
    # Upload the core dump and the test binary, only if test failed
    - uses: actions/upload-artifact@v3
      if: ${{ failure() }}
      with:
        name: cores
        path: /cores
    - uses: actions/upload-artifact@v3
      if: ${{ failure() }}
      with:
        name: executable
        path: ./build/${{matrix.PRESET}}/tests/tests
